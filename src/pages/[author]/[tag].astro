---
import { AUTHORS, type Author } from "../../authors";
import { getPostsByTag } from "../../utils";
import Posts from "../../components/Posts.astro";
import CountedTags from "../../components/CountedTags.astro";
import PostsWithTags from "../../layouts/PostsWithTags.astro";
import type { GetStaticPaths } from "astro";

export const getStaticPaths = (() => {
  return AUTHORS.map((author) => {
    return author.tags.map((tag) => ({
      params: { author: author.href ?? author.name, tag: tag.id },
      props: { authorObject: author, tagName: tag.name },
    }));
  }).flat();
}) satisfies GetStaticPaths;

const { tag } = Astro.params;
interface Props {
  authorObject: Author;
  tagName: string;
}
const { authorObject, tagName } = Astro.props;

const posts = await getPostsByTag(tagName);
---

<PostsWithTags bodyClass={authorObject.bodyClass}>
  <CountedTags activeTagID={tag} author={authorObject.name} />
  <Posts {posts} />
</PostsWithTags>
