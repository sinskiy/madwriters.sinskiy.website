---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "./ui/FormattedDate.astro";
import Tag from "./ui/Tag.astro";
import { TAGS } from "../tags";

type Props = CollectionEntry<"blog">["data"] & {
  displayType?: "full" | "preview";
};

// TODO add last updated
const {
  title,
  pubDate,
  description,
  categories,
  displayType = "full",
  author,
} = Astro.props;
const tagsID =
  categories &&
  categories.map((tag) => TAGS.find((tagObject) => tagObject.name === tag)?.id);
---

{
  displayType === "full" && categories && (
    <ul class="flex flex-wrap gap-2">
      {tagsID &&
        categories.map((tag, i) => (
          <li>
            <a href={`/${author}/${tagsID[i]}/`}>
              <Tag>{tag}</Tag>
            </a>
          </li>
        ))}
    </ul>
  )
}
<article
  class:list={[
    displayType === "preview" ? "mb-2 hover:bg-surface-highest" : "mb-24",
    "relative w-full rounded-2xl bg-surface-high px-8 py-6 transition-colors md:px-16 md:py-8",
  ]}
>
  <header class="mb-2">
    <h2 class="text-2xl font-bold text-onSurface md:text-4xl">{title}</h2>
    {pubDate && <FormattedDate date={pubDate} />}
    <!-- {
			updatedDate && (
				<div>
					Last updated on <FormattedDate date={new Date(updatedDate)} />
				</div>
			)
		} -->
  </header>
  <div
    class="prose prose-sm min-w-full break-words dark:prose-invert md:prose-base prose-headings:my-6"
  >
    {displayType === "preview" && description}
    <slot />
  </div>
</article>
